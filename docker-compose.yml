services:
  valkey:
    build: {context: ./valkey, dockerfile: Dockerfile}
    ports: ["6379:6379"]

  base: &base
    build: .
    volumes: ["./data:/app/data:ro"]
    environment:
      - VALKEY_URL=redis://valkey:6379


  prometheus:
    image: prom/prometheus:latest
    command: ['--config.file=/etc/prometheus/prometheus.yml']
    volumes: ['./prometheus.yml:/etc/prometheus/prometheus.yml']
    ports: ["9090:9090"]

  grafana:
    image: grafana/grafana-oss:latest
    environment: [GF_SECURITY_ADMIN_PASSWORD=admin]
    ports: ["3000:3000"]
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards

  enrich:
    <<: *base
    command: python agents/enrich.py
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    depends_on: [valkey, prometheus]

  fanout:
    <<: *base
    command: python agents/fanout.py
    depends_on: [valkey, prometheus]
    deploy: {replicas: 1}

  seed:
    <<: *base
    command: python agents/user_seeder.py
    profiles: ["seed"]
    depends_on: [valkey]

  reader:
    <<: *base
    command: python agents/user_reader.py
    depends_on: [valkey, prometheus]

  replay:
    <<: *base
    command: python agents/replay.py
    environment:
      REPLAY_FILE: data/news_sample.csv
      REPLAY_RATE: "250"
    depends_on: [valkey]

  dashboard:
    <<: *base
    command: python agents/dashboard.py
    ports: ["8501:8501"]
    depends_on: [valkey]

  ui:
    <<: *base
    command: streamlit run agents/ui.py --server.port 8502 --server.address 0.0.0.0
    ports: ["8502:8502"]
    depends_on: [valkey]

  valkey_exporter:
    image: oliver006/redis_exporter:latest   # <â”€ official Prometheus exporter
    command: ["--redis.addr=redis://valkey:6379"]
    ports: ["9121:9121"]
    depends_on: [valkey]
